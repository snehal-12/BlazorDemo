@page "/serverstatus"

@using BlazorDemoApp.StateStore

@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject SessionStorage sessionStorage

<h2>SetStatus</h2>
<br />

@if (server is not null)
{
    <FieldComponent Label="Server Status">
        <Control>
            <input type="checkbox" @bind-value="server.IsActive"
            checked class="form-check-input">
            </input>
        </Control>
    </FieldComponent>
    <br />
    <button type="button" class="btn btn-primary" @onclick="Save">Save</button>
}

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}


@code {
    private Server? server;

    private string? errorMessage;    

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.server = await this.sessionStorage.GetServerAsync();
            StateHasChanged();
        }
    }

    private async Task Save()
    {
        if( server is not null)
        {
            await sessionStorage.SetServerAsync(null);
            ServerRepo.AddServer(server);
            NavigationManager.NavigateTo($"/servers/back_from/{this.server.City}");
        }        
    }
}
