@page "/serverstatus"

@using BlazorDemoApp.StateStore

@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject ContainerStorage containerStorage

<h2>SetStatus</h2>
<br />

@if (server is not null)
{
    <FieldComponent Label="Server Status">
        <Control>
            <input type="checkbox" @bind-value="server.IsActive"
            checked class="form-check-input">
            </input>
        </Control>
    </FieldComponent>
    <br />
    <button type="button" class="btn btn-primary" @onclick="Save">Save</button>
}

@code {
    private Server? server;      

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            this.server =  this.containerStorage.GetServer();
            StateHasChanged();
        }
    }

    private void Save()
    {
        if(server is not null)
        {
            containerStorage.SetServer(null);
            ServerRepo.AddServer(server);
            NavigationManager.NavigateTo($"/servers/back_from/{this.server.City}");
        }        
    }
}
